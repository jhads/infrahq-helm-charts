apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "server.fullname" . }}
  labels:
{{- include "server.labels" . | nindent 4 }}
data:
  infra.yaml: |
    version: 0.2
{{- range $key, $value := .Values.config }}
{{- if hasPrefix "env:" $value }}
    # Extract the environment variable name by trimming the `env:` prefix
    {{- $envVarName := trimPrefix "env:" $value }}
    {{ $key }}: {{ printf "$( %s )" $envVarName }}
{{- else }}
    {{ $key }}: "{{ $value }}"
{{- end }}
{{- end }}

{{- range $key, $val := $config.addr }}
{{- $_ := printf ":%.f" $val | set $config.addr $key }}
{{- end }}

{{- if .Values.ui.enabled }}
{{- $_ := printf "http://%s.%s:%.f" (include "ui.fullname" .) .Release.Namespace .Values.ui.service.port | dict "proxyURL" | merge $config.ui }}
{{- end }}

{{- if and .Values.postgres.enabled (not .Values.config.dbHost) }}
{{- $_ := set $config "dbHost" (include "postgres.fullname" .) }}
{{- $_ := set $config "dbPort" .Values.postgres.service.port }}
{{- end }}

{{- if not $config.dbEncryptionKey }}
{{- $_ := set $config "dbEncryptionKey" "/var/run/secrets/infrahq.com/encryption-key/key" }}
{{- end }}

{{- if not .Values.config.tls }}
{{- $_ := set $config.tls "ca" "/var/run/secrets/infrahq.com/certificate-authority/ca.crt" }}
{{- $_ := set $config.tls "caPrivateKey" "/var/run/secrets/infrahq.com/certificate-authority/ca.key" }}
{{- end }}

{{- $config := unset $config "users" }}
{{- $config := unset $config "providers" }}
{{- $config := unset $config "grants" }}
{{- $config := unset $config "secrets" }}

{{- if .Values.config.admin.enabled }}
{{- $adminUser := dict "name" "admin@local" }}
{{- $_ := set $adminUser "infraRole" "admin" }}
{{- $_ := set $adminUser "password" "file:/var/run/secrets/infrahq.com/initial-admin-password-secret/password" }}
{{- if .Values.config.admin.accessKeySecret }}
{{- $_ := set $adminUser "accessKey" "file:/var/run/secrets/infrahq.com/initial-admin-access-key-secret/access-key" }}
{{- end }}
{{- $_ := set $config "users" (list $adminUser) }}
{{- end }}

{{- range $key, $val := $config }}
{{- if kindIs "invalid" $val }}
{{- else if kindIs "map" $val }}
    {{ $key }}:
{{- $val | toYaml | nindent 6 }}
{{- else if kindIs "slice" $val }}
    {{ $key }}:
{{- $val | toYaml | nindent 6 }}
{{- else if kindIs "string" $val }}
    {{ $key }}: {{ tpl $val $ }}
{{- else }}
    {{ $key }}: {{ $val }}
{{- end }}
{{- end }}
